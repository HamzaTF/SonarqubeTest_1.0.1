from agcolib.NetworkFunctions.can.client.uds_client import UDSConnection
from agcolib.NetworkFunctions.uds.client import ECUClient
from agcolib.NetworkFunctions.uds import DiagMessage, DiagParameter, MemoryLocation, SignalType, SignalConversion, SignalByteOrder, SignalScaleLinear, IntervalType, SignalTabIntp
from enum import Enum
from copy import deepcopy


class DGW_BVRoutineIdentifierSignals:
    CheckMemoryRequest = DiagMessage(0x0202, 'CheckMemoryRequest', [2, 4, 64], [1, 3, 4, 5], '', 0)

    CheckMemoryResponse = DiagMessage(0x0202, 'CheckMemoryResponse', [1, 2, 3, 4, 64, 65], None, '', 1)
    CheckMemoryResponse.add_parameter(DiagParameter('RoutineInfo', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'PASSED': [0, 0], 'FAILED': [1, 1]}, 0, 1, '', False, False, False))

    CheckProgrammingPreConditionsRequest = DiagMessage(0x0203, 'CheckProgrammingPreConditionsRequest', [3], None, '', 0)

    CheckProgrammingPreConditionsResponse = DiagMessage(0x0203, 'CheckProgrammingPreConditionsResponse', [1, 2, 3, 4, 64, 65], None, '', 1)
    CheckProgrammingPreConditionsResponse.add_parameter(DiagParameter('ProgrammingPreConditionList', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'ENGINE_SPEED_NOT_ZERO': [1, 1], 'IMMOBILIZER_NOT_UNLOCKED': [2, 2], 'TRANSMISSION_SPEED_IN_NOT_ZERO': [3, 3], 'TRANSMISSION_SPEED_OUT_NOT_ZERO': [4, 4], 'VEHICLE_SPEED_NOT_ZERO': [5, 5], 'CONTROLLING_ACTIVE': [6, 6], 'IGNITION_OFF_ON_NECESSARY': [7, 7], 'PROGRAMMING_VOLTAGE_TOO_LOW': [8, 8], 'IGNITION_NOT_ON': [9, 9], 'VEHICLE_VOLTAGE_TOO_LOW': [10, 10], 'TEMPERATURE_TOO_HIGH': [11, 11], 'TEMPERATURE_TOO_LOW': [12, 12], 'RESERVED_BY_HIS': [13, 127], 'VEHICLE_NOT_IN_SAFE_STATE': [128, 128], 'RESERVED_BY_MANUFACTURER': [129, 191], 'RESERVED_BY_SUPPLIER': [192, 255]}, 1, 255, 'for each wrong condition 1 byte is sent, if all conditions are meet 0 bytes are transmitted', False, True, False))

    DebugInternalServicesRequest = DiagMessage(0x1200, 'DebugInternalServicesRequest', [4], [4], '', 2)
    DebugInternalServicesRequest.add_parameter(DiagParameter('Subfunction', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    DebugInternalServicesRequest.add_parameter(DiagParameter('Data', 2, 2, 0, None, SignalByteOrder.Motorola, SignalType.BYTEFIELD, SignalConversion.MIN_MAX_LENGTH, 0, 1, '', 0, 255, '', False, False, False))

    DebugInternalServicesResponse = DiagMessage(0x1200, 'DebugInternalServicesResponse', [1, 2, 3, 4, 64, 65], None, '', 2)
    DebugInternalServicesResponse.add_parameter(DiagParameter('Subfunction', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    DebugInternalServicesResponse.add_parameter(DiagParameter('Data', 2, 2, 0, None, SignalByteOrder.Motorola, SignalType.BYTEFIELD, SignalConversion.MIN_MAX_LENGTH, 0, 1, '', 0, 255, '', False, False, False))

    SoftwareFeatureValueRequest = DiagMessage(0xCF03, 'SoftwareFeatureValueRequest', [3, 4, 64], None, '', 2)
    SoftwareFeatureValueRequest.add_parameter(DiagParameter('NumberOfFollowingSwFeaturesIds', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    SoftwareFeatureValueRequest.add_parameter(DiagParameter('SwFeatureId_Raw', 2, 2, 0, 32, SignalByteOrder.Motorola, SignalType.BYTEFIELD, SignalConversion.IDENTICAL, 0, 1, '', 1, 4293918719, '', False, True, False))

    SoftwareFeatureValueResponse = DiagMessage(0xCF03, 'SoftwareFeatureValueResponse', [1, 2, 3, 4, 64, 65], None, '', 4)
    SoftwareFeatureValueResponse.add_parameter(DiagParameter('NumberOfFollowingSwFeatures', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    SoftwareFeatureValueResponse.add_parameter(DiagParameter('SwFeatureId_Raw', 2, 2, 0, 32, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 4293918719, '', False, True, False))
    SoftwareFeatureValueResponse.add_parameter(DiagParameter('SwFeatureId_Text', 3, 2, 0, 32, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'SUSP_FRONT_AXLE': [1, 1], 'GUIDE_CONTOUR_ASSISTENT': [2, 2], 'REVERSE_DRIVE_STATION': [4, 4], 'PRECISION_FARM_DOC_SYSTEM': [5, 5], 'ENGINE_BRAKE': [6, 6], 'WIPER_FRONT_TYPE': [7, 7], 'ISO_FRONT_SOCKET': [8, 8], 'SPEED_RADAR_SENSOR': [10, 10], 'NON_VIRTUAL_DISPLAY_2ND': [11, 11], 'HYD_FIRST_PUMP_FLOW': [12, 12], 'HYD_FIRST_PUMP_TYPE': [13, 13], 'ISO11783_BUS': [14, 14], 'HEADLAND_MGMT': [17, 17], 'HYD_CONSTANT_PUMP_MONITORING': [18, 18], 'HYD_SECOND_PUMP_TYPE': [19, 19], 'TYRES_PRESSURE_CONTROL': [20, 20], 'SUSP_ACTIVE_ROLL_STABILIZATION': [21, 21], 'AWD_ON_WHEN_BRAKE_ACTIV': [22, 22], 'PTO_REAR_FRONT_FOREST': [23, 23], 'BRAKE_PEDAL': [24, 24], 'BRAKE_CIRCUIT': [25, 25], 'GUIDE_AUTOMATIC_STEERING_KIT': [28, 28], 'STEERING_SUPERIMPOSED': [29, 29], 'ENGINE_FAN_REVERSING': [30, 30], 'BRAKE_TRAILER_HYD': [33, 33], 'AIRCONDITION': [34, 34], 'HYD_FILL_LEVEL': [35, 35], 'THREE_PT_FRONT_DOUBLE_ACTING': [36, 36], 'THREE_PT_REAR_RELEASE_CONTROL': [37, 37], 'THREE_PT_REAR_MINI_HYDRAULIC': [38, 38], 'AIRCONDITION_FOOTWELL_HEATING': [39, 39], 'AIRCONDITION_CAT4': [40, 40], 'INFOTAINMENT': [47, 47], 'PARKBRAKE_AUTOMATIC': [50, 50], 'REVERSE_TRAVEL_WARNING': [51, 51], 'COMPRESSED_AIR_SYSTEM': [53, 53], 'BRAKE_STEERING_BRAKE_SENSOR': [58, 58], 'HYD_ELECTRIC_VALVE_1': [64, 64], 'HYD_ELECTRIC_VALVE_2': [65, 65], 'HYD_ELECTRIC_VALVE_3': [66, 66], 'HYD_ELECTRIC_VALVE_4': [67, 67], 'HYD_ELECTRIC_VALVE_5': [68, 68], 'HYD_ELECTRIC_VALVE_6': [69, 69], 'HYD_ELECTRIC_VALVE_7': [70, 70], 'HYD_ELECTRIC_VALVE_8': [71, 71], 'THREE_PT_REAR_HYD_LINKSTAB': [73, 73], 'THREE_PT_REAR_DOUBLE_ACTING': [74, 74], 'THREE_PT_REAR_TYPE': [75, 75], 'THREE_PT_FRONT_TYPE': [76, 76], 'HYD_REAR_FENDER_SWITCH': [79, 79], 'HYD_POWERBEYOND_INCREASE': [80, 80], 'HYD_FILTER_MONITORING': [81, 81], 'MULTICOUPLING_TRACTOR': [84, 84], 'THREE_PT_FRONT_RELEASE_CONTROL': [85, 85], 'HYD_SECOND_PUMP_FLOW': [89, 89], 'FRONTLOADER_PROFI': [90, 90], 'ARMREST_MAIN_JOYSTICK': [95, 95], 'ARMREST_CROSSGATE_LEVER': [96, 96], 'ARMREST_VALVE_CONTROL_1': [97, 97], 'ARMREST_VALVE_CONTROL_2': [98, 98], 'ARMREST_FRONT_3PT_CONTROL': [99, 99], 'ARMREST_REAR_3PT': [100, 100], 'ARMREST_AC': [101, 101], 'ARMREST_IND_KEY': [102, 102], 'ENGINE_EAT_SCR': [104, 104], 'ENGINE_EAT_DPF': [105, 105], 'GUIDE_AUTO_HEADLAND_MGMT_TI': [107, 107], 'USER_SETTING_MGMT': [113, 113], 'TRAILER_STEERING_LOCK': [117, 117], 'ENGINE_FAN': [125, 125], 'PRECISION_FARM_SECTION_CONTROL': [129, 129], 'PRECISION_FARM_RATE_CONTROL': [130, 130], 'PTO_REAR': [133, 133], 'PTO_FRONT': [134, 134], 'PTO_REAR_540': [135, 135], 'PTO_REAR_540E': [136, 136], 'PTO_REAR_1000': [137, 137], 'PTO_REAR_1000E': [138, 138], 'PTO_REAR_1300': [139, 139], 'PTO_REAR_GSPTO': [140, 140], 'PTO_REAR_INTERCHANGEABLE': [143, 143], 'PTO_REAR_FRONT_DOUBLE_ACT_DRV': [145, 145], 'PTO_REAR_FRONT_SPEED_WARNING': [147, 147], 'PTO_REAR_FENDER_SWITCH_L_R': [148, 148], 'PTO_REAR_FENDER_PERMIT_ENGAGE': [150, 150], 'WINDOW_REAR_HEATED': [154, 154], 'WINDOW_REAR_WASHWIP': [155, 155], 'LIGHTS_ROTATING_BEACON': [156, 156], 'LIGHTS_FRONT_ROOF_WORKLIGHT': [158, 158], 'LIGHTS_A_PILLAR_WORKLIGHT': [159, 159], 'LIGHTS_FENDER_WORKLIGHT': [256, 256], 'LIGHTS_DRIVING_LIGHTS_UPPER': [257, 257], 'LIGHTS_CORNER_LIGHT': [258, 258], 'WINDOW_RIGHT_WASHWIP': [259, 259], 'WINDOW_FRONT_HEATED': [261, 261], 'MIRROR_EXTERNAL_HEATER': [262, 262], 'LIGHTS_REAR_LIGHTS': [263, 263], 'LIGHTS_DRIVING_LIGHTS_LOWER': [264, 264], 'LIGHTS_DAYTIME_LIGHT': [272, 272], 'LIGHTS_THIRD_BRAKE_LIGHT': [275, 275], 'WIPER_FRONT_FIELD_LIMITATION': [280, 280], 'MIRROR_EXTERNAL_ADJUSTABLE': [281, 281], 'MIRROR_EXTERNAL_MARKER_LIGHTS': [282, 282], 'MIRROR_EXTERNAL_TELESCOPIC': [283, 283], 'GUIDE_SYSTEM_AVAILABLE': [284, 284], 'TRACTOR_IMPLEMENT_MGMT': [285, 285], 'HYD_OIL_SUMMATION': [286, 286], 'BRAKE_STEERING_BRAKE': [287, 287], 'TRACTION_OPTIMIZATION': [288, 288], 'HYD_OIL_HEATING': [289, 289], 'ENGINE_POWER': [290, 290], 'ENGINE_EMISSION_MARKET': [291, 291], 'ENGINE_EMISSION_LEVEL': [292, 292], 'FRONTLOADER_DETECTION': [293, 293], 'WLIGHTS_MF': [294, 294], 'CAMERA_NB': [295, 295], 'LANGUAGE_MF': [296, 296], 'TWIN_TRAC': [297, 297], 'TELEMETRY': [298, 298], 'FRONT_AXLE_TYPE_MF': [299, 299], 'FRONT_PTO': [300, 300], 'CABINE_SUSP': [301, 301], 'FRONT_AXLE_SUSP_MF': [302, 302], 'FRONT_AXLE_SUSP_VT': [303, 303], 'FRONT_HITCH': [304, 304], 'HYD_NB_VALVE_CONF_MF': [305, 305], 'HYD_PUMP_SIZE': [306, 306], 'ARMREST_MF': [307, 307], 'HYD_LEVER_TYPE': [308, 308], 'HYD_TRAILER_BRAKE': [310, 310], 'PNEU_TRAILER_BRAKE': [311, 311], 'ENGINE_MODEL_MF': [312, 312], 'FRONT_AXLE_STEERING_MF': [313, 313], 'REAR_HITCH_TYPE': [314, 314], 'DROMONE_MF': [315, 315], 'REVERSE_LIGHT_MF': [316, 316], 'RIGHT_PANEL_MF': [317, 317], 'FIRST_MAINTENANCE_MF': [318, 318], 'REGULAR_MAINTENANCE_MF': [319, 319], 'UNIT_FORCE_MF': [320, 320], 'UNIT_MASS_MF': [321, 321], 'UNIT_PRESSURE_MF': [322, 322], 'UNIT_SURFACE_MF': [323, 323], 'UNIT_TEMPERATURE_MF': [324, 324], 'UNIT_VOLUME_MF': [325, 325], 'UNIT_DISTANCE_MF': [326, 326], 'FORMAT_TIME_MF': [327, 327], 'FORMAT_DATE_MF': [328, 328], 'ENGINE_TYPE_MF': [329, 329], 'POWER_SUPPLY_MF': [330, 330], 'COUPLER': [331, 331], 'PTO_SPEED_MF': [332, 332], 'COUPLING_PEDAL_BRAKE_MF': [333, 333], 'LOADER_MF': [334, 334], 'NT03': [335, 335], 'BUZZER_WARNING_MF': [336, 336], 'PARKLOCK_MF': [337, 337], 'MIRROR_DEFROST_MF': [338, 338], 'COUNTRY_MF': [339, 339], 'HVAC_MF': [340, 340], 'GEARBOX_TYPE': [341, 341], 'NON_VIRTUAL_DISPLAY_1ST': [342, 342], 'STEERING_WHEEL_SENSOR': [343, 343], 'STEERING_QUICK': [344, 344], 'RADIO': [345, 345], 'SOFT_DRIVE': [346, 346], 'BUCKET_RELEASE': [347, 347], 'AIR_DRYER': [348, 348], 'WHEEL_ANGLE_SENSOR': [349, 349], 'GUIDE_SYSTEM_READY': [350, 350], 'TRAKTOR_COLOR': [351, 351], 'WHEEL_RADIUS': [352, 352], 'ARMREST_RAFI': [353, 353], 'ARMREST_PARKER': [354, 354], 'NT03_SA': [355, 355], 'DUAL_CONTROL_MF': [356, 356], 'HYD_ELECTRIC_VALVE_9': [357, 357], 'HYD_ELECTRIC_VALVE_10': [358, 358], 'HYD_ELECTRIC_VALVE_11': [359, 359], 'HYD_ELECTRIC_VALVE_12': [360, 360], 'STEERING_VALVE': [361, 361], 'LIGHTS_C_PILLAR_WORKLIGHT': [362, 362], 'LIGHTS_REAR_ROOF_WORKLIGHT': [363, 363], 'LIGHTS_FRONT_HOOD_WORKLIGHT': [364, 364], 'FRONT_HYD_EXT_SWITCH_PAIR1': [365, 365], 'HAZARD_FLASHER_SOUND_DISABLE': [368, 368], 'AIR_FILTER_CLEANING': [369, 369], 'IGNITION_CONTROL_MODULE': [370, 370], 'PRECISION_FARM_SECTION_CTRL_24': [371, 371], 'PRECISION_FARM_SECTION_CTRL_48': [372, 372], 'PRECISION_FARM_RATE_CONTROL_2': [373, 373], 'PRECISION_FARM_RATE_CONTROL_5': [374, 374], 'INFOTAINMENT_NR_MICROPHONES': [375, 375], 'MIRROR_EXTERNAL_WIDE_ANGLE_ADJ': [376, 376], 'LIGHTS_CFG_BRAKE_AS_TURN': [377, 377], 'LIGHTS_CFG_BRAKE_AS_TURN_IF': [378, 378], 'LIGHTS_CFG_TURN_AS_BRAKE': [379, 379], 'LIGHTS_CFG_TURN_FAST_IF': [380, 380], 'LIGHTS_CFG_OVERSIZE_AS_TURN': [381, 381], 'LIGHTS_CFG_OVERSIZE_AS_HAZARD': [382, 382], 'CAMERA': [383, 383], 'CREEPER': [384, 384], 'PRECISION_FARM_SECTION_CTRL_36': [385, 385], 'HYD_ON_OFF': [386, 386], 'GEARBOX_RATIO_1': [387, 387], 'ECO_ENGINE': [388, 388], 'DIGITAL_LOADER': [389, 389], 'BRAKE_TO_NEUTRAL': [390, 390], 'FOUR_WHEEL_DRIVE_MODE_US': [391, 391], 'MOTHER_REGULATION': [392, 392], 'WITH_CABIN': [393, 393], 'POWERSHUTTLE': [394, 394], 'ENGINE_SPEED_MEMORY': [395, 395], 'AUTODRIVE_ACTIVATION': [396, 396], 'PTO_540_ECO_SPEED_LIMITATION': [397, 397], 'PRESET_ACTIVATION': [398, 398], 'ENGINE_CURVE_STRATEGY': [399, 399], 'GPA_TYPE': [400, 400], 'NB_TEETH_DRIVING_PINION': [401, 401], 'NB_TEETH_CONDUCTING_PINION': [402, 402], 'FINAL_REDUCTION': [403, 403], 'HYDRAULIC_PUMP_CAPACITY': [404, 404], 'PIN_SENSING_CAPACITY': [406, 406], 'NB_EFFORT_BAR': [407, 407], 'POT_INTERMIX_SETPOINT': [408, 408], 'DIAMETER_CYLINDER': [409, 409], 'DRAFT_CTRL_SENSORS': [410, 410], 'FOUR_WHEEL_DRIVE': [411, 411], 'DAMPING_SWITCH_ATC': [412, 412], 'POT_HIGH_POSITION_SETPOINT': [413, 413], 'POT_SINK_SPEED_SETPOINT': [414, 414], 'SWITCH_3P_HITCHING': [415, 415], 'TYPE_INTERMIX': [416, 416], 'EXT_CMD_BUTTONS': [417, 417], 'ACTIVATION_MR': [418, 418], 'PTO_SETTING': [419, 419], 'PTO_TYPE': [420, 420], 'NB_TEETH_GEAR_WHEEL': [421, 421], 'PTO_MODE': [422, 422], 'NB_TEETH_ISC': [423, 423], 'ABSENCE_ISC': [424, 424], 'FNR_BRAND': [425, 425], 'TYPE_BV': [426, 426], 'GEARBOX_SPEED_TEETH': [427, 427], 'PS_SPEED_TEETH': [428, 428], 'ENGINE_CONFIG': [429, 429], 'FOUR_WD_RATIO_DENUM': [430, 430], 'FOUR_WD_RATIO_NUM': [431, 431], 'SIGMA_POWER': [432, 432], 'FUEL_TANK': [433, 433], 'STEERABLE_HITCH': [434, 434], 'CONTROLLED_DRAWBAR': [435, 435], 'CAB_ENTRY_LADDER_TYPE': [437, 437], 'TRACTOR_GAGE': [439, 439], 'FACTORY_GAGE': [441, 441], 'PROFI_JOYSTICK': [442, 442], 'COLD_START_VALVES': [443, 443], 'SMART_CONNECT': [444, 444], 'SNAPIN_PREMIUM_DASHBOARD': [445, 445], 'SNAPIN_TRACTOR_HISTORIC_PERFOR': [446, 446], 'DEF_TANK': [447, 447], 'FUEL_TANK_SENSOR': [448, 448], 'REAR_WHEEL_SPEED_SENSOR': [449, 449], 'BEVEL_GEAR_RATIO': [450, 450], 'LIGHTS_FRONT_ROOF_WORKLIGHT_IN': [451, 451], 'LIGHTS_REAR_ROOF_WORKLIGHT_IN': [452, 452], 'ARMREST_PAHKA': [453, 453], 'TWO_PS_OPTION': [454, 454], 'GB_TAXLE': [455, 455], 'VALVE_CONNECTED_TO_FRONT_HITCH': [456, 456], 'SPEED_OFFSET_ACTIVATION': [457, 457], 'NB_ALTERNATOR': [458, 458], 'CREEPER_ENGAGE_MODE': [459, 459], 'HARDBAR_LEVELING_SW_FEATURE_B': [460, 460], 'HYD_CTRL_DETENT_SELECT': [461, 461], 'AMBIENT_AIR_TEMP_SENSOR': [462, 462], 'CLUTCH_PEDAL_MAX_SETP_OFFSET': [463, 463], 'BRAKE_TRAILER_PNEU': [464, 464], 'SEAT_ELECTRONIC_SEAT_CONTROL': [465, 465], 'POSITION_LIGHTS_A_PILLAR': [466, 466], 'TURN_SIGNAL_LIGHTS_A_PILLAR': [467, 467], 'GRAIN_TANK_COVER_TYPE': [468, 468], 'DISCHARGE_GATE_TYPE': [469, 469], 'CHOPPER_TYPE': [470, 470], 'CHAFF_SPREADER_TYPE': [471, 471], 'PARALEVEL': [472, 472], 'AUTODOCK': [473, 473], 'UNLOADER_FOLD': [474, 474], 'SETTINGS_AUTOMATION_MODE': [475, 475], 'GEAR_SHIFT_ON_FLY': [477, 477], 'ROTOR_GEAR_SELECTION': [478, 478], 'CLEANING_FAN_CONTROL': [479, 479], 'ROTOR_REVERSE_CONTROL': [480, 480], 'GRAIN_TANK_VOLUME': [481, 481], 'AUTO_RESIDUE_CONTROL': [482, 482], 'ENGINE_SUPPLIER': [483, 483], 'FEEDER_PITCH': [484, 484], 'TAILBOARD_TYPE': [485, 485], 'CONCAVE_CONFIG': [486, 486], 'THIRD_AXLE': [487, 487], 'CONCAVE_TYPE': [488, 488], 'CHAFFER_TYPE': [489, 489], 'SIEVE_TYPE': [490, 490], 'HEADER_GEAR_RATIO': [491, 491], 'CLEANING_FAN_KIT': [492, 492], 'ROTOR_SPEED_SENSING': [493, 493], 'DEFLECTOR_TYPE': [494, 494], 'CHOPPER_PLUG_SENSING': [495, 495], 'CLUTCH_LUBRICATION': [496, 496], 'STEERING_PRESSURE_SENSOR': [497, 497], 'STEER_BY_WIRE': [498, 498], 'YIELD_SENSOR': [499, 499], 'FEATURE_MGMT_DEVICE': [500, 500], 'TURN_ASSISTANT': [501, 501], 'INFOTAINMENT_NR_SPEAKERS': [502, 502], 'FINAL_REDUCTION_DENUM': [503, 503], 'FINAL_REDUCTION_NUM': [504, 504], 'BEVEL_GEAR_RATIO_NUM': [505, 505], 'LEVER_TYPE_LINEAR_LEVER_1': [506, 506], 'LEVER_TYPE_LINEAR_LEVER_2': [507, 507], 'LEVER_TYPE_LINEAR_LEVER_3': [508, 508], 'LEVER_TYPE_LINEAR_LEVER_4': [509, 509], 'LEVER_TYPE_FRONT_PTO_SWITCH': [510, 510], 'HEADS_UP_DISPLAY': [511, 511], 'THREE_PT_REAR_EXTERNAL_POS': [512, 512], 'SUSP_FRONT_AXLE_EXTERNAL': [513, 513], 'HYD_ELECTRIC_VALVE_13': [514, 514], 'CAMERA_FORWARD_VIEW': [515, 515], 'LIGHTS_REAR_WORKLIGHT': [516, 516], 'LIGHTS_TURN_IND_R': [517, 517], 'LIGHTS_TURN_IND_F': [518, 518], 'LIGHTS_LICENSE_PLATE': [519, 519], 'FRONT_AXLE_TYPE': [520, 520], 'VERTICAL_KNIFE': [521, 521], 'VARIABLE_HEADER_SPEED': [522, 522], 'PROPULSION_MOTOR': [523, 523], 'WHEEL_CIRCUMFERENCE_ADJUSTABLE': [524, 524], 'PTO_REAR_SPTO_TYPE': [525, 525], 'WHEEL_CIRCUMFERENCE': [526, 526], 'LIGHTS_TRAILER_TURN_FAULT_IND': [527, 527], 'LIGHTS_WORK': [528, 528], 'LIGHTS_TURN_OPP_ON_W_HAZARD_ON': [529, 529], 'DEF_TANK_TEMP': [530, 530], 'VD0X_MOUNTING_ORIENTATION': [531, 531], 'PROPULSION_MOTOR_DISPLACEMENT': [532, 532], 'THREE_PT_REAR_FENDER_SW_RIGHT': [533, 533], 'THREE_PT_REAR_FENDER_SW_LEFT': [534, 534], 'PTO_REAR_750': [535, 535], 'LIGHTS_SIDE_MARKER': [536, 536], 'HYD_ON_OFF_VALVE_2': [537, 537], 'STEERING_EXTERNAL_BSAC': [538, 538], 'PTO_REAR_SPEED_NON_STANDARD': [539, 539], 'FRONT_HYD_EXT_SWITCH_PAIR2': [540, 540], 'PTO_STATIONARY_MODE_REQ_NA': [541, 541], 'LOADER_READY': [542, 542], 'SNAPIN_HITCH_CONTROL': [543, 543], 'SNAPIN_WEATHER_FORECAST': [544, 544], 'TERMINAL_INFOT_CTRL': [545, 545], 'HYD_LIFT_LINK': [546, 546], 'HYD_PICKUP_HITCH': [547, 547], 'HYD_VALVE_6_2_FRONT_1': [548, 548], 'HYD_VALVE_6_2_FRONT_2': [549, 549], 'STEERING_PUMP_LOW_NOISE': [550, 550], 'BRAKE_PEDAL_SENSOR': [551, 551], 'GEARBOX_SECOND_RATIO': [552, 552], 'STEERING_VALVE_TYPE': [553, 553], 'ROAD_SPEED_TOLERANCE': [554, 554], 'BRAKE_PEDAL_COUPLING_SENSOR': [555, 555], 'ENGINE_MAINTAIN_POWER_TIME': [556, 556], 'INFOTAINMENT_SYS_MIC': [557, 557], 'HYD_VALVE_FL_3RD_FUNCTION': [558, 558], 'HYD_VALVE_FL_4TH_FUNCTION': [559, 559], 'PARKLOCK_SENSOR_HYDAC': [560, 560], 'TM_4TH_GEAR_TEETH': [561, 561], 'SPECIAL_VEHICLE_SPEED_FORWARD': [4293918707, 4293918707], 'SPECIAL_VEHICLE_SPEED_BACKWARD': [4293918708, 4293918708], 'HELP_DATA1_LANGUAGE': [4293918709, 4293918709], 'HELP_DATA2_LANGUAGE': [4293918710, 4293918710], 'HELP_DATA3_LANGUAGE': [4293918711, 4293918711], 'WHEEL_CIRCUMFERENCE_SPECIAL': [4293918712, 4293918712], 'VEHICLE_MODEL': [4293918713, 4293918713], 'VEHICLE_BRAND': [4293918714, 4293918714], 'MAXIMUM_VEHICLE_SPEED': [4293918715, 4293918715], 'MAX_WHEEL_CIRCUMFERENCE': [4293918716, 4293918716], 'VEHICLE_PLATFORM': [4293918718, 4293918718], 'VEHICLE_IDENTIFICATION_NUMBER': [4293918719, 4293918719]}, 1, 4293918719, '', False, True, False))
    SoftwareFeatureValueResponse.add_parameter(DiagParameter('SwFeatureState', 4, 6, 0, 8, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'FEATURE_NOT_AVAILABLE': [0, 0], 'FEATURE_AVAILABLE': [1, 1], 'FEATURE_TEMPORARILY_AVAILABLE': [2, 2], 'FEATURE_EXPIRED': [3, 3]}, 0, 3, '', False, True, False))
    SoftwareFeatureValueResponse.add_parameter(DiagParameter('SwFeatureLength', 5, 7, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.LEADING_LENGTH_INFO_TYPE, 0, 1.0, '', 0, 255, '', False, True, True))
    SoftwareFeatureValueResponse.add_parameter(DiagParameter('SwFeatureValue', 6, 8, 0, None, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.LEADING_LENGTH_INFO_TYPE, 0, 1, '', 0, 255, '', False, True, False))

    EraseMemoryRequest = DiagMessage(0xFF00, 'EraseMemoryRequest', [2, 4, 64], [1, 3, 4, 5], '', 4)
    EraseMemoryRequest.add_parameter(DiagParameter('NumberOfBytesOfMemoryAddressParameter', 1, 0, 0, 4, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 15, '', False, False, False))
    EraseMemoryRequest.add_parameter(DiagParameter('NumberOfBytesOfMemorySizeParameter', 2, 0, 4, 4, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 15, '', False, False, False))
    EraseMemoryRequest.add_parameter(DiagParameter('MemoryAddress', 3, 1, 0, 32, SignalByteOrder.Motorola, SignalType.BYTEFIELD, SignalConversion.STANDARD_LENGTH, 0, 1, '', 0, 255, '', False, False, False))
    EraseMemoryRequest.add_parameter(DiagParameter('MemorySize', 4, 5, 0, 32, SignalByteOrder.Motorola, SignalType.BYTEFIELD, SignalConversion.STANDARD_LENGTH, 0, 1, '', 0, 255, '', False, False, False))

    EraseMemoryResponse = DiagMessage(0xFF00, 'EraseMemoryResponse', [1, 2, 3, 4, 64, 65], None, '', 1)
    EraseMemoryResponse.add_parameter(DiagParameter('RoutineInfo', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'PASSED': [0, 0], 'FAILED': [1, 1]}, 0, 1, '', False, False, False))

    CheckProgrammingDependenciesRequest = DiagMessage(0xFF01, 'CheckProgrammingDependenciesRequest', [2, 4, 64], [1, 3, 4, 5], '', 0)

    CheckProgrammingDependenciesResponse = DiagMessage(0xFF01, 'CheckProgrammingDependenciesResponse', [1, 2, 3, 4, 64, 65], None, '', 1)
    CheckProgrammingDependenciesResponse.add_parameter(DiagParameter('RoutineInfo', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'CORRECT_RESULT': [0, 0], 'INCORRECT_RESULT': [1, 1], 'INCORRECT_RESULT_ERROR_SW_HW': [2, 2], 'INCORRECT_RESULT_ERROR_SW_SW': [3, 3], 'INCORRECT_RESULT_ONE_OR_MORE_BLOCKS_NOT_PROGRAMMED': [4, 4], 'HEX_FILE_INCOMPLETE_DATA_RECORDS_MISSING': [6, 6], 'CERTIFICATE_VALIDATION_FAILED': [7, 7], 'SIGNATURE_VALIDATION_FAILED': [8, 8], 'FEATURE_FILE_PARSING_FAILED': [9, 9], 'ECU_SERIAL_NUMBER_MISMATCH': [10, 10], 'TRANSACTION_ID_MISMATCH': [11, 11]}, 0, 11, '', False, False, False))


class DGW_BVReadDataSignals:
    TimeDate = DiagMessage(0x0101, 'TimeDate', [1, 3, 4, 64], None, '', 8)
    TimeDate.add_parameter(DiagParameter('Seconds', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 's', 0, 59.75, 'The seconds component of the current time of day', False, False, False))
    TimeDate.add_parameter(DiagParameter('Minutes', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'min', 0, 59, 'The minutes component of the current time of day', False, False, False))
    TimeDate.add_parameter(DiagParameter('Hours', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'h', 0, 23, 'The hour component of the current time of day', False, False, False))
    TimeDate.add_parameter(DiagParameter('Month', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, 'The month component of the current calendar date', False, False, False))
    TimeDate.add_parameter(DiagParameter('Day', 5, 4, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, 'The day component of the current calendar date', False, False, False))
    TimeDate.add_parameter(DiagParameter('Year', 6, 5, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 1985, 2235, 'The year component of the current calendar date', False, False, False))
    TimeDate.add_parameter(DiagParameter('LocalMinuteOffset', 7, 6, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, -125.0, 1.0, 'min', -59, 59, 'The minute component of the offset between the UTC time and date and a local time zone time and date', False, False, False))
    TimeDate.add_parameter(DiagParameter('LocalHourOffset', 8, 7, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, -125.0, 1.0, 'min', -12, 14, 'The hour component of the offset between the UTC time and date and a local time zone time and date', False, False, False))

    EnvTime = DiagMessage(0x0112, 'EnvTime', [3, 4, 64], None, '', 4)
    EnvTime.add_parameter(DiagParameter('Seconds', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 's', 0, 59.75, 'only used for DTC environmental data', False, False, False))
    EnvTime.add_parameter(DiagParameter('Minutes', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'min', 0, 59, 'only used for DTC environmental data', False, False, False))
    EnvTime.add_parameter(DiagParameter('Hours', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'h', 0, 23, 'only used for DTC environmental data', False, False, False))
    EnvTime.add_parameter(DiagParameter('reserved', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 255, '', False, False, False))

    EnvDate = DiagMessage(0x0113, 'EnvDate', [3, 4, 64], None, '', 4)
    EnvDate.add_parameter(DiagParameter('Day', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, 'only used for DTC environmental data', False, False, False))
    EnvDate.add_parameter(DiagParameter('Month', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, 'only used for DTC environmental data', False, False, False))
    EnvDate.add_parameter(DiagParameter('Year', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 1985, 2235, 'only used for DTC environmental data', False, False, False))
    EnvDate.add_parameter(DiagParameter('reserved', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 255, '', False, False, False))

    EnvTotalVehicleHours = DiagMessage(0x0114, 'EnvTotalVehicleHours', [1, 3, 4, 64], None, '', 1)
    EnvTotalVehicleHours.add_parameter(DiagParameter('TotalVehicleHours', 1, 0, 0, 32, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.05, 'h', 0, 210554060.75, '', False, False, False))

    EnvOccurrenceCount = DiagMessage(0x0115, 'EnvOccurrenceCount', [3, 4, 64], None, '', 2)
    EnvOccurrenceCount.add_parameter(DiagParameter('OccurrenceCount', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 127, 'only used for DTC environmental data', False, False, False))
    EnvOccurrenceCount.add_parameter(DiagParameter('reserved', 2, 1, 0, 24, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 16777215, '', False, False, False))

    EnvBatteryPotential = DiagMessage(0x011A, 'EnvBatteryPotential', [3, 4, 64], None, '', 2)
    EnvBatteryPotential.add_parameter(DiagParameter('BatteryPotential', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.05, 'V', 0, 3212.75, 'only used for DTC environmental data', False, False, False))
    EnvBatteryPotential.add_parameter(DiagParameter('reserved', 2, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 255, '', False, False, False))

    EnvAmbientAirTemperature = DiagMessage(0x011B, 'EnvAmbientAirTemperature', [3, 4, 64], None, '', 2)
    EnvAmbientAirTemperature.add_parameter(DiagParameter('AmbientAirTemperature', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, -273.0, 0.03125, '?C', -273, 1734.96875, 'only used for DTC environmental data', False, False, False))
    EnvAmbientAirTemperature.add_parameter(DiagParameter('reserved', 2, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 16777215, '', False, False, False))

    EnvEngineSpeed = DiagMessage(0x011C, 'EnvEngineSpeed', [3, 4, 64], None, '', 2)
    EnvEngineSpeed.add_parameter(DiagParameter('EngineSpeedCurrent', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.125, 'rpm', 0, 4000, '', False, False, False))
    EnvEngineSpeed.add_parameter(DiagParameter('Reserved', 2, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))

    EnvMachineSelectedSpeedAndDirection = DiagMessage(0x011D, 'EnvMachineSelectedSpeedAndDirection', [3, 4, 64], None, '', 3)
    EnvMachineSelectedSpeedAndDirection.add_parameter(DiagParameter('MachineSelectedDirection', 1, 0, 6, 2, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'REVERSE': [0, 0], 'FORWARD': [1, 1], 'ERROR': [2, 2], 'NOT_AVAILABLE': [3, 3]}, 0, 3, '', False, False, False))
    EnvMachineSelectedSpeedAndDirection.add_parameter(DiagParameter('MachineSelectedSpeed', 2, 0, 0, 14, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.004, 'm/s', 0, 65.532, '', False, False, False))
    EnvMachineSelectedSpeedAndDirection.add_parameter(DiagParameter('Reserved', 3, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))

    EnvEnginePercentLoadAtCurrentSpeed = DiagMessage(0x011E, 'EnvEnginePercentLoadAtCurrentSpeed', [3, 4, 64], None, '', 3)
    EnvEnginePercentLoadAtCurrentSpeed.add_parameter(DiagParameter('EnginePercentLoadAtCurrentSpeed', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '%', 0, 125, '', False, False, False))
    EnvEnginePercentLoadAtCurrentSpeed.add_parameter(DiagParameter('Reserved0', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 255, '', False, False, False))
    EnvEnginePercentLoadAtCurrentSpeed.add_parameter(DiagParameter('Reserved1', 3, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))

    TransactionID = DiagMessage(0x1100, 'TransactionID', [1, 3, 4, 64], None, '', 1)
    TransactionID.add_parameter(DiagParameter('TransactionID', 1, 0, 0, 32, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 4294967295, '', False, False, False))

    InternalErrorModule = DiagMessage(0x1101, 'InternalErrorModule', [3, 4, 64], None, '', 2)
    InternalErrorModule.add_parameter(DiagParameter('InternalErrorModule', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    InternalErrorModule.add_parameter(DiagParameter('Reserved', 2, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))

    InternalErrorCode = DiagMessage(0x1102, 'InternalErrorCode', [3, 4, 64], None, '', 2)
    InternalErrorCode.add_parameter(DiagParameter('InternalErrorCode', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    InternalErrorCode.add_parameter(DiagParameter('Reserved', 2, 2, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))

    NextServiceInterval = DiagMessage(0xCF00, 'NextServiceInterval', [1, 3, 4, 64], None, '', 4)
    NextServiceInterval.add_parameter(DiagParameter('AbsoluteVehicleHours', 1, 0, 0, 32, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.05, 'h', 0, 210554060.75, '', False, False, False))
    NextServiceInterval.add_parameter(DiagParameter('Day', 2, 4, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, '', False, False, False))
    NextServiceInterval.add_parameter(DiagParameter('Month', 3, 5, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, '', False, False, False))
    NextServiceInterval.add_parameter(DiagParameter('Year', 4, 6, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 1985, 2235, '', False, False, False))

    HardwareFeatureList = DiagMessage(0xCF01, 'HardwareFeatureList', [3, 4, 64], None, '', 3)
    HardwareFeatureList.add_parameter(DiagParameter('NumberOfFollowingHwFeatures', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    HardwareFeatureList.add_parameter(DiagParameter('HwFeatureId_Raw', 2, 2, 0, 48, SignalByteOrder.Motorola, SignalType.BYTEFIELD, SignalConversion.STANDARD_LENGTH, 0, 1, '', 0, 255, '', False, True, False))
    HardwareFeatureList.add_parameter(DiagParameter('HwFeatureId_Text', 3, 2, 0, 48, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'HW_ACIC_R01': [17587891077280, 17587891077280], 'HW_CCM_R01': [17587891081377, 17587891081377], 'HW_CGLB_R01': [17587891085474, 17587891085474], 'HW_CGLH_R01': [17587891089573, 17587891089573], 'HW_CGLS_R01': [17587891093669, 17587891093669], 'HW_DB_R01': [17587891097623, 17587891097623], 'HW_ZEK_R01': [17587891101726, 17587891101726], 'HW_FHCM_R01': [17587891105955, 17587891105955], 'HW_DCU_R01': [17587891109928, 17587891109928], 'HW_IKM14_R01': [17587891114150, 17587891114150], 'HW_IU_R04': [17587891118326, 17587891118326], 'HW_MCM_R01': [17587891122343, 17587891122343], 'HW_PTO_R01_PTO_1': [17587891126440, 17587891126440], 'HW_PTO_R01_PTO_2': [17587891126441, 17587891126441], 'HW_PTO_R01_PTO_3': [17587891126442, 17587891126442], 'HW_PTO_R01_PTO_4': [17587891126443, 17587891126443], 'HW_PTO_R01_PTO_5': [17587891126444, 17587891126444], 'HW_RL_R01': [17587891130445, 17587891130445], 'HW_RSP_R01': [17587891134637, 17587891134637], 'HW_SCSL_01_1326': [17587891138615, 17587891138615], 'HW_SCSW_2WF_R01': [17587891142893, 17587891142893], 'HW_VCM_R01_VCM_1': [17587891146926, 17587891146926], 'HW_VCM_R01_VCM_2': [17587891146927, 17587891146927], 'HW_VCM_R01_VCM_3': [17587891146928, 17587891146928], 'HW_VCM_R01_VCM_4': [17587891146929, 17587891146929], 'HW_VCM_R01_VCM_5': [17587891146930, 17587891146930], 'HW_VD0X_R01': [17587891150876, 17587891150876], 'HW_EXT_SRC362031': [17587891154947, 17587891154947], 'HW_EXT_SRC143431_R01_LIGHT_FENDT': [17587891159043, 17587891159043], 'HW_EXT_SRC143431_R01_CABECU': [17587891159089, 17587891159089], 'HW_EXT_SRC143431_R01_IO_EXT_MF': [17587891159090, 17587891159090], 'HW_EXT_SRC143431_R01_NULL_ADDR': [17587891159294, 17587891159294], 'HW_VALVE_BOSCH_EHS1_AUX_0': [17587891163264, 17587891163264], 'HW_VALVE_BOSCH_EHS1_AUX_1': [17587891163265, 17587891163265], 'HW_VALVE_BOSCH_EHS1_AUX_2': [17587891163266, 17587891163266], 'HW_VALVE_BOSCH_EHS1_AUX_3': [17587891163267, 17587891163267], 'HW_VALVE_BOSCH_EHS1_AUX_4': [17587891163268, 17587891163268], 'HW_VALVE_BOSCH_EHS1_AUX_5': [17587891163269, 17587891163269], 'HW_VALVE_BOSCH_EHS1_AUX_6': [17587891163270, 17587891163270], 'HW_VALVE_BOSCH_EHS1_AUX_7': [17587891163271, 17587891163271], 'HW_VALVE_BOSCH_EHS1_AUX_8': [17587891163272, 17587891163272], 'HW_VALVE_BOSCH_EHS1_EHC_FRONT': [17587891163273, 17587891163273], 'HW_VALVE_BOSCH_EHS1_EHC_REAR': [17587891163274, 17587891163274], 'HW_VALVE_BOSCH_EHS1_EHC_2COUPLER': [17587891163275, 17587891163275], 'HW_VALVE_BOSCH_EHS1_EHC_LOADER_BOOM': [17587891163276, 17587891163276], 'HW_VALVE_BOSCH_EHS1_EHC_LOADER_BUCKET': [17587891163277, 17587891163277], 'HW_VALVE_BOSCH_EHS1_EHC_REAR_HITCH': [17587891163279, 17587891163279], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_0': [17587891167360, 17587891167360], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_1': [17587891167361, 17587891167361], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_2': [17587891167362, 17587891167362], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_3': [17587891167363, 17587891167363], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_4': [17587891167364, 17587891167364], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_5': [17587891167365, 17587891167365], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_6': [17587891167366, 17587891167366], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_7': [17587891167367, 17587891167367], 'HW_VALVE_DANFOSS_S7_PVED_CC_AUX_8': [17587891167368, 17587891167368], 'HW_VALVE_DANFOSS_S7_PVED_CC_EHC_FRONT': [17587891167369, 17587891167369], 'HW_VALVE_DANFOSS_S7_PVED_CC_EHC_REAR': [17587891167370, 17587891167370], 'HW_VALVE_DANFOSS_S7_PVED_CC_STEERING': [17587891167374, 17587891167374], 'HW_DGW_R01': [17587891171371, 17587891171371], 'HW_EDC17CV41': [17587891175424, 17587891175424], 'HW_MD1CE100': [17587891179520, 17587891179520], 'HW_ICM_ID_R01': [17587891183668, 17587891183668], 'HW_ICM_IM_R01': [17587891187764, 17587891187764], 'HW_RHCM_R01': [17587891191972, 17587891191972], 'HW_EXT_SRC143431_C2': [17587891195907, 17587891195907], 'HW_ARMREST_RAFI_MAIN_ECU_R01_VT': [17587891200005, 17587891200005], 'HW_ARMREST_RAFI_MAIN_ECU_R01_MF': [17587891200032, 17587891200032], 'HW_HVAC_AUTO_BERGSTROM_R01': [17587891204117, 17587891204117], 'HW_AUTO_11_R01_APP1': [17587891208195, 17587891208195], 'HW_AUTO_11_R01_VIRGIN': [17587891208429, 17587891208429], 'HW_CLUSTER_IC2_VT_R01': [17587891212347, 17587891212347], 'HW_VALVE_BOSCH_EHS1_PLUS_0': [17587891216512, 17587891216512], 'HW_VALVE_BOSCH_EHS1_PLUS_1': [17587891216513, 17587891216513], 'HW_VALVE_BOSCH_EHS1_PLUS_2': [17587891216514, 17587891216514], 'HW_VALVE_BOSCH_EHS1_PLUS_3': [17587891216515, 17587891216515], 'HW_VALVE_BOSCH_EHS1_PLUS_4': [17587891216516, 17587891216516], 'HW_VALVE_BOSCH_EHS1_PLUS_5': [17587891216517, 17587891216517], 'HW_VALVE_BOSCH_EHS1_PLUS_6': [17587891216518, 17587891216518], 'HW_VALVE_BOSCH_EHS1_PLUS_7': [17587891216519, 17587891216519], 'HW_VALVE_BOSCH_EHS1_PLUS_8': [17587891216520, 17587891216520], 'HW_VALVE_BOSCH_EHS1_PLUS_9': [17587891216521, 17587891216521], 'HW_VALVE_BOSCH_EHS1_PLUS_10': [17587891216522, 17587891216522], 'HW_VALVE_BOSCH_EHS1_PLUS_11': [17587891216523, 17587891216523], 'HW_VALVE_BOSCH_EHS1_PLUS_12': [17587891216524, 17587891216524], 'HW_VALVE_BOSCH_EHS1_PLUS_13': [17587891216525, 17587891216525], 'HW_VALVE_BOSCH_EHS1_PLUS_14': [17587891216526, 17587891216526], 'HW_VALVE_BOSCH_EHS1_PLUS_15': [17587891216527, 17587891216527], 'HW_AU_R01': [17587891220630, 17587891220630], 'HW_AC_R01': [17587891224736, 17587891224736], 'HW_ACM_R04': [17587891228746, 17587891228746], 'HW_DM_R01_DM_1': [17587891232947, 17587891232947], 'HW_DM_R01_DM_2': [17587891232948, 17587891232948], 'HW_IKM9_R01': [17587891241126, 17587891241126], 'HW_CLUSTER_IC1': [17587891245308, 17587891245308], 'HW_NT03_R01_PRIMARY': [17587891249193, 17587891249193], 'HW_NT03_R01_SEC_SA': [17587891249194, 17587891249194], 'HW_SRC56_R01_SUS': [17587891265583, 17587891265583], 'HW_SRC56_R01_CAC': [17587891265586, 17587891265586], 'HW_SRC56_R01_VIRGIN': [17587891265790, 17587891265790], 'HW_PSDR_R01_TTD': [17587891281980, 17587891281980], 'HW_PSDR_R01_VIRGIN': [17587891282174, 17587891282174], 'HW_HVAC_MAHLE_R01': [17587891286041, 17587891286041], 'HW_RADIO_BOSCH_R01': [17587891294284, 17587891294284], 'HW_AUTO_HVAC_CONSOLE_EOLANE': [17587891314738, 17587891314738], 'HW_VU_R01': [17587891319041, 17587891319041], 'HW_SC_11786_R01': [17587891323031, 17587891323031], 'HW_RHCM_W_O_BTN_R01': [17587891327140, 17587891327140], 'HW_ARMREST_RAFI_LEVER_R01_DRIVE': [17587891331078, 17587891331078], 'HW_ARMREST_RAFI_LEVER_R01_SHIFT': [17587891331105, 17587891331105], 'HW_JOYSTICK_ADV': [17587891335202, 17587891335202], 'HW_TPC_R01': [17587891339315, 17587891339315], 'HW_CLUSTER_CONTI': [17587891343384, 17587891343384], 'HW_AUTO_7_R01_FLOB': [17587891347460, 17587891347460], 'HW_AUTO_7_R01_APP37': [17587891347463, 17587891347463], 'HW_AUTO_7_R01_APP38': [17587891347464, 17587891347464], 'HW_AUTO_7_R01_CAB': [17587891347505, 17587891347505], 'HW_AUTO_7_R01_VIRGIN': [17587891347623, 17587891347623], 'HW_AUTO_5_R01_T1': [17587891351555, 17587891351555], 'HW_AUTO_5_R01_T2': [17587891351556, 17587891351556], 'HW_AUTO_5_R01_SUS': [17587891351599, 17587891351599], 'HW_AUTO_5_R01_APP167': [17587891351712, 17587891351712], 'HW_AUTO_5_R01_APP168': [17587891351713, 17587891351713], 'HW_AUTO_5_R01_VIRGIN': [17587891351717, 17587891351717], 'HW_AUTO_5_R01_APP177': [17587891351722, 17587891351722], 'HW_AUTO_5_R01_APP178': [17587891351723, 17587891351723], 'HW_AUTO_5_R01_CAB_SUSP': [17587891351761, 17587891351761], 'HW_AUTO_5_R01_ADD': [17587891351762, 17587891351762], 'HW_AUTO_5_R01_CAB_ARMREST': [17587891351763, 17587891351763], 'HW_AUTO_5_R01_APP221': [17587891351773, 17587891351773], 'HW_AUTO_5_R01_APP137': [17587891351787, 17587891351787], 'HW_AUTO_5_R01_APP138': [17587891351788, 17587891351788], 'HW_SRC1410_R01_TM': [17587891359747, 17587891359747], 'HW_SRC1410_R01_VIRGIN': [17587891359998, 17587891359998], 'HW_MFA_KWP_R01': [17587891363940, 17587891363940], 'HW_CONTIDASH_KWP_R01': [17587891368018, 17587891368018], 'HW_BERGSTROM_ATC_KWP_R01': [17587891372057, 17587891372057], 'HW_ZEK_KWP_R01': [17587891376195, 17587891376195], 'HW_LCP_EB_KWP_R01': [17587891380323, 17587891380323], 'HW_NT01_KWP_R01': [17587891384404, 17587891384404], 'HW_VD04_KWP_R01': [17587891388506, 17587891388506], 'HW_SRC362031_KWP_R01': [17587891392542, 17587891392542], 'HW_EDC17CV41TIER4F_KWP_R01': [17587891396608, 17587891396608], 'HW_CLUSTER_IC2_MF_R01': [17587891408919, 17587891408919], 'HW_RHS_PANEL_MANU': [17587891413014, 17587891413014], 'HW_SUSP_CABIN_ZF': [17587891421231, 17587891421231], 'HW_IOEM2_VT_R01_ARMREST': [17587891441669, 17587891441669], 'HW_IOEM2_VT_R01_VIRGIN': [17587891441918, 17587891441918], 'HW_ETCV_R01': [17587891445774, 17587891445774], 'HW_SCU_R01': [17587891449876, 17587891449876], 'HW_MFRL_R01_LEFT': [17587891454134, 17587891454134], 'HW_MFRL_R01_RIGHT': [17587891454135, 17587891454135], 'HW_ESC_R01': [17587891458102, 17587891458102], 'HW_EDC17CV54_KWP_R01': [17587891462144, 17587891462144], 'HW_EDC17CV41TIER4I_KWP_R01': [17587891466240, 17587891466240], 'HW_EDC17CV41TIER4F12_KWP_R01_ECU_1': [17587891470336, 17587891470336], 'HW_EDC17CV41TIER4F12_KWP_R01_ECU_2': [17587891470337, 17587891470337], 'HW_EDC17CV41T3_KWP_R01': [17587891474432, 17587891474432], 'HW_EDC17C63_KWP_R01': [17587891478528, 17587891478528], 'HW_ZONE_D_DISPLAY_R01': [17587891482664, 17587891482664], 'HW_SPM_MARLIN_R01': [17587891486880, 17587891486880], 'HW_LCP_KWP_R01': [17587891490918, 17587891490918], 'HW_CEDC_LITTELFUSE_R01': [17587891494976, 17587891494976], 'HW_HCD1_LITTELFUSE_R01': [17587891499184, 17587891499184], 'HW_HCD2_LITTELFUSE_R01': [17587891503281, 17587891503281], 'HW_VMM1_R01': [17587891507408, 17587891507408], 'HW_VMM2_R01': [17587891511505, 17587891511505], 'HW_VMM3_R01': [17587891515602, 17587891515602], 'HW_DANFOSS_MC050_118_R01': [17587891519584, 17587891519584], 'HW_GQS_APPAREO_R01': [17587891523754, 17587891523754], 'HW_MADS_APPAREO_R01_CHAFFER_FR': [17587891527793, 17587891527793], 'HW_MADS_APPAREO_R01_PROCESSOR_FR': [17587891527796, 17587891527796], 'HW_MADS_APPAREO_R01_TRANS_ROTOR_LOSS': [17587891527801, 17587891527801], 'HW_MADS_APPAREO_R01_PROCESSOR_RRI': [17587891527802, 17587891527802], 'HW_MADS_APPAREO_R01_PROCESSOR_RRO': [17587891527804, 17587891527804], 'HW_MADS_APPAREO_R01_PROCESSOR_RLO': [17587891527806, 17587891527806], 'HW_MADS_APPAREO_R01_PROCESSOR_RLI': [17587891527812, 17587891527812], 'HW_MADS_APPAREO_R01_PROCESSOR_FL': [17587891527814, 17587891527814], 'HW_MADS_APPAREO_R01_CLEAN_SHOE_CHAFF_FL': [17587891527817, 17587891527817], 'HW_PVED_CLS_R01_MAIN_CONTROLLER': [17587891531795, 17587891531795], 'HW_PVED_CLS_R01_SAFETY_CONTROLLER': [17587891531866, 17587891531866], 'HW_PVED_CLS_R01_SBW_A_MAIN': [17587891531867, 17587891531867], 'HW_PVED_CLS_R01_SBW_A_SAFETY': [17587891531868, 17587891531868], 'HW_PVED_CLS_R01_SBW_B_MAIN': [17587891531870, 17587891531870], 'HW_PVED_CLS_R01_SBW_B_SAFETY': [17587891531871, 17587891531871], 'HW_YMM_AGL_R01': [17587891536117, 17587891536117], 'HW_FLOWMETER_AGL_R01_YIELD_MONIT_MODULE': [17587891540096, 17587891540096], 'HW_FLOWMETER_AGL_R01_SPEED_SENSOR_MODULE': [17587891540207, 17587891540207], 'HW_FLOWMETER_AGL_R01_MOISTURE_MODULE': [17587891540212, 17587891540212], 'HW_MAN_EDC17CV42_D15_R01': [17587891544064, 17587891544064], 'HW_MAN_DENSO_INJ_R01': [17587891548315, 17587891548315], 'HW_EOLANE_KEYPAD_R01': [17587891552265, 17587891552265], 'HW_SRC56_ALO_LOADER_R01': [17587891556496, 17587891556496], 'HW_RHS_PANEL_AUTO': [17587891560470, 17587891560470], 'HW_EXT_SRC143431_KWP_R01': [17587891564785, 17587891564785], 'HW_SCSW_1WF_R01': [17587891568877, 17587891568877], 'HW_SCSW_2WF_SW_R01': [17587891572973, 17587891572973], 'HW_SCM_KWP_R01': [17587891576951, 17587891576951], 'HW_VU_R02': [17587891581185, 17587891581185], 'HW_VALVE_DANFOSS_S5_PVED_CC_0': [17587891585152, 17587891585152], 'HW_VALVE_DANFOSS_S5_PVED_CC_STEERING': [17587891585166, 17587891585166], 'HW_MAN_EDC17CV42_R01': [17587891589120, 17587891589120], 'HW_VALVE_BUCHER_R01_0': [17587891593344, 17587891593344], 'HW_VALVE_BUCHER_R01_1': [17587891593345, 17587891593345], 'HW_VALVE_BUCHER_R01_2': [17587891593346, 17587891593346], 'HW_VALVE_BUCHER_R01_3': [17587891593347, 17587891593347], 'HW_VALVE_BUCHER_R01_4': [17587891593348, 17587891593348], 'HW_VALVE_BUCHER_R01_5': [17587891593349, 17587891593349], 'HW_VALVE_BUCHER_R01_6': [17587891593350, 17587891593350], 'HW_VALVE_BUCHER_R01_7': [17587891593351, 17587891593351], 'HW_VALVE_BUCHER_R01_8': [17587891593352, 17587891593352], 'HW_VALVE_BUCHER_R01_9': [17587891593353, 17587891593353], 'HW_VALVE_BUCHER_R01_10': [17587891593354, 17587891593354], 'HW_VALVE_BUCHER_R01_11': [17587891593355, 17587891593355], 'HW_VALVE_BUCHER_R01_12': [17587891593356, 17587891593356], 'HW_VALVE_BUCHER_R01_13': [17587891593357, 17587891593357], 'HW_VALVE_BUCHER_R01_14': [17587891593358, 17587891593358], 'HW_VALVE_BUCHER_R01_15': [17587891593359, 17587891593359], 'HW_MD1CC878_R01': [17587891597312, 17587891597312], 'HW_SRC1812_R01_TM': [17587891601411, 17587891601411], 'HW_SRC1812_R01_VIRGIN': [17587891601662, 17587891601662], 'HW_UNKNOWN': [17592186040575, 17592186040575]}, 17587891077280, 17592186040575, '', False, True, False))

    SoftwareFeatureList = DiagMessage(0xCF02, 'SoftwareFeatureList', [3, 4, 64], None, '', 3)
    SoftwareFeatureList.add_parameter(DiagParameter('NumberOfFollowingSwFeatures', 1, 0, 0, 16, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 0, 65535, '', False, False, False))
    SoftwareFeatureList.add_parameter(DiagParameter('SwFeatureId_Raw', 2, 2, 0, 32, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 4293918719, '', False, True, False))
    SoftwareFeatureList.add_parameter(DiagParameter('SwFeatureId_Text', 3, 2, 0, 32, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'SUSP_FRONT_AXLE': [1, 1], 'GUIDE_CONTOUR_ASSISTENT': [2, 2], 'REVERSE_DRIVE_STATION': [4, 4], 'PRECISION_FARM_DOC_SYSTEM': [5, 5], 'ENGINE_BRAKE': [6, 6], 'WIPER_FRONT_TYPE': [7, 7], 'ISO_FRONT_SOCKET': [8, 8], 'SPEED_RADAR_SENSOR': [10, 10], 'NON_VIRTUAL_DISPLAY_2ND': [11, 11], 'HYD_FIRST_PUMP_FLOW': [12, 12], 'HYD_FIRST_PUMP_TYPE': [13, 13], 'ISO11783_BUS': [14, 14], 'HEADLAND_MGMT': [17, 17], 'HYD_CONSTANT_PUMP_MONITORING': [18, 18], 'HYD_SECOND_PUMP_TYPE': [19, 19], 'TYRES_PRESSURE_CONTROL': [20, 20], 'SUSP_ACTIVE_ROLL_STABILIZATION': [21, 21], 'AWD_ON_WHEN_BRAKE_ACTIV': [22, 22], 'PTO_REAR_FRONT_FOREST': [23, 23], 'BRAKE_PEDAL': [24, 24], 'BRAKE_CIRCUIT': [25, 25], 'GUIDE_AUTOMATIC_STEERING_KIT': [28, 28], 'STEERING_SUPERIMPOSED': [29, 29], 'ENGINE_FAN_REVERSING': [30, 30], 'BRAKE_TRAILER_HYD': [33, 33], 'AIRCONDITION': [34, 34], 'HYD_FILL_LEVEL': [35, 35], 'THREE_PT_FRONT_DOUBLE_ACTING': [36, 36], 'THREE_PT_REAR_RELEASE_CONTROL': [37, 37], 'THREE_PT_REAR_MINI_HYDRAULIC': [38, 38], 'AIRCONDITION_FOOTWELL_HEATING': [39, 39], 'AIRCONDITION_CAT4': [40, 40], 'INFOTAINMENT': [47, 47], 'PARKBRAKE_AUTOMATIC': [50, 50], 'REVERSE_TRAVEL_WARNING': [51, 51], 'COMPRESSED_AIR_SYSTEM': [53, 53], 'BRAKE_STEERING_BRAKE_SENSOR': [58, 58], 'HYD_ELECTRIC_VALVE_1': [64, 64], 'HYD_ELECTRIC_VALVE_2': [65, 65], 'HYD_ELECTRIC_VALVE_3': [66, 66], 'HYD_ELECTRIC_VALVE_4': [67, 67], 'HYD_ELECTRIC_VALVE_5': [68, 68], 'HYD_ELECTRIC_VALVE_6': [69, 69], 'HYD_ELECTRIC_VALVE_7': [70, 70], 'HYD_ELECTRIC_VALVE_8': [71, 71], 'THREE_PT_REAR_HYD_LINKSTAB': [73, 73], 'THREE_PT_REAR_DOUBLE_ACTING': [74, 74], 'THREE_PT_REAR_TYPE': [75, 75], 'THREE_PT_FRONT_TYPE': [76, 76], 'HYD_REAR_FENDER_SWITCH': [79, 79], 'HYD_POWERBEYOND_INCREASE': [80, 80], 'HYD_FILTER_MONITORING': [81, 81], 'MULTICOUPLING_TRACTOR': [84, 84], 'THREE_PT_FRONT_RELEASE_CONTROL': [85, 85], 'HYD_SECOND_PUMP_FLOW': [89, 89], 'FRONTLOADER_PROFI': [90, 90], 'ARMREST_MAIN_JOYSTICK': [95, 95], 'ARMREST_CROSSGATE_LEVER': [96, 96], 'ARMREST_VALVE_CONTROL_1': [97, 97], 'ARMREST_VALVE_CONTROL_2': [98, 98], 'ARMREST_FRONT_3PT_CONTROL': [99, 99], 'ARMREST_REAR_3PT': [100, 100], 'ARMREST_AC': [101, 101], 'ARMREST_IND_KEY': [102, 102], 'ENGINE_EAT_SCR': [104, 104], 'ENGINE_EAT_DPF': [105, 105], 'GUIDE_AUTO_HEADLAND_MGMT_TI': [107, 107], 'USER_SETTING_MGMT': [113, 113], 'TRAILER_STEERING_LOCK': [117, 117], 'ENGINE_FAN': [125, 125], 'PRECISION_FARM_SECTION_CONTROL': [129, 129], 'PRECISION_FARM_RATE_CONTROL': [130, 130], 'PTO_REAR': [133, 133], 'PTO_FRONT': [134, 134], 'PTO_REAR_540': [135, 135], 'PTO_REAR_540E': [136, 136], 'PTO_REAR_1000': [137, 137], 'PTO_REAR_1000E': [138, 138], 'PTO_REAR_1300': [139, 139], 'PTO_REAR_GSPTO': [140, 140], 'PTO_REAR_INTERCHANGEABLE': [143, 143], 'PTO_REAR_FRONT_DOUBLE_ACT_DRV': [145, 145], 'PTO_REAR_FRONT_SPEED_WARNING': [147, 147], 'PTO_REAR_FENDER_SWITCH_L_R': [148, 148], 'PTO_REAR_FENDER_PERMIT_ENGAGE': [150, 150], 'WINDOW_REAR_HEATED': [154, 154], 'WINDOW_REAR_WASHWIP': [155, 155], 'LIGHTS_ROTATING_BEACON': [156, 156], 'LIGHTS_FRONT_ROOF_WORKLIGHT': [158, 158], 'LIGHTS_A_PILLAR_WORKLIGHT': [159, 159], 'LIGHTS_FENDER_WORKLIGHT': [256, 256], 'LIGHTS_DRIVING_LIGHTS_UPPER': [257, 257], 'LIGHTS_CORNER_LIGHT': [258, 258], 'WINDOW_RIGHT_WASHWIP': [259, 259], 'WINDOW_FRONT_HEATED': [261, 261], 'MIRROR_EXTERNAL_HEATER': [262, 262], 'LIGHTS_REAR_LIGHTS': [263, 263], 'LIGHTS_DRIVING_LIGHTS_LOWER': [264, 264], 'LIGHTS_DAYTIME_LIGHT': [272, 272], 'LIGHTS_THIRD_BRAKE_LIGHT': [275, 275], 'WIPER_FRONT_FIELD_LIMITATION': [280, 280], 'MIRROR_EXTERNAL_ADJUSTABLE': [281, 281], 'MIRROR_EXTERNAL_MARKER_LIGHTS': [282, 282], 'MIRROR_EXTERNAL_TELESCOPIC': [283, 283], 'GUIDE_SYSTEM_AVAILABLE': [284, 284], 'TRACTOR_IMPLEMENT_MGMT': [285, 285], 'HYD_OIL_SUMMATION': [286, 286], 'BRAKE_STEERING_BRAKE': [287, 287], 'TRACTION_OPTIMIZATION': [288, 288], 'HYD_OIL_HEATING': [289, 289], 'ENGINE_POWER': [290, 290], 'ENGINE_EMISSION_MARKET': [291, 291], 'ENGINE_EMISSION_LEVEL': [292, 292], 'FRONTLOADER_DETECTION': [293, 293], 'WLIGHTS_MF': [294, 294], 'CAMERA_NB': [295, 295], 'LANGUAGE_MF': [296, 296], 'TWIN_TRAC': [297, 297], 'TELEMETRY': [298, 298], 'FRONT_AXLE_TYPE_MF': [299, 299], 'FRONT_PTO': [300, 300], 'CABINE_SUSP': [301, 301], 'FRONT_AXLE_SUSP_MF': [302, 302], 'FRONT_AXLE_SUSP_VT': [303, 303], 'FRONT_HITCH': [304, 304], 'HYD_NB_VALVE_CONF_MF': [305, 305], 'HYD_PUMP_SIZE': [306, 306], 'ARMREST_MF': [307, 307], 'HYD_LEVER_TYPE': [308, 308], 'HYD_TRAILER_BRAKE': [310, 310], 'PNEU_TRAILER_BRAKE': [311, 311], 'ENGINE_MODEL_MF': [312, 312], 'FRONT_AXLE_STEERING_MF': [313, 313], 'REAR_HITCH_TYPE': [314, 314], 'DROMONE_MF': [315, 315], 'REVERSE_LIGHT_MF': [316, 316], 'RIGHT_PANEL_MF': [317, 317], 'FIRST_MAINTENANCE_MF': [318, 318], 'REGULAR_MAINTENANCE_MF': [319, 319], 'UNIT_FORCE_MF': [320, 320], 'UNIT_MASS_MF': [321, 321], 'UNIT_PRESSURE_MF': [322, 322], 'UNIT_SURFACE_MF': [323, 323], 'UNIT_TEMPERATURE_MF': [324, 324], 'UNIT_VOLUME_MF': [325, 325], 'UNIT_DISTANCE_MF': [326, 326], 'FORMAT_TIME_MF': [327, 327], 'FORMAT_DATE_MF': [328, 328], 'ENGINE_TYPE_MF': [329, 329], 'POWER_SUPPLY_MF': [330, 330], 'COUPLER': [331, 331], 'PTO_SPEED_MF': [332, 332], 'COUPLING_PEDAL_BRAKE_MF': [333, 333], 'LOADER_MF': [334, 334], 'NT03': [335, 335], 'BUZZER_WARNING_MF': [336, 336], 'PARKLOCK_MF': [337, 337], 'MIRROR_DEFROST_MF': [338, 338], 'COUNTRY_MF': [339, 339], 'HVAC_MF': [340, 340], 'GEARBOX_TYPE': [341, 341], 'NON_VIRTUAL_DISPLAY_1ST': [342, 342], 'STEERING_WHEEL_SENSOR': [343, 343], 'STEERING_QUICK': [344, 344], 'RADIO': [345, 345], 'SOFT_DRIVE': [346, 346], 'BUCKET_RELEASE': [347, 347], 'AIR_DRYER': [348, 348], 'WHEEL_ANGLE_SENSOR': [349, 349], 'GUIDE_SYSTEM_READY': [350, 350], 'TRAKTOR_COLOR': [351, 351], 'WHEEL_RADIUS': [352, 352], 'ARMREST_RAFI': [353, 353], 'ARMREST_PARKER': [354, 354], 'NT03_SA': [355, 355], 'DUAL_CONTROL_MF': [356, 356], 'HYD_ELECTRIC_VALVE_9': [357, 357], 'HYD_ELECTRIC_VALVE_10': [358, 358], 'HYD_ELECTRIC_VALVE_11': [359, 359], 'HYD_ELECTRIC_VALVE_12': [360, 360], 'STEERING_VALVE': [361, 361], 'LIGHTS_C_PILLAR_WORKLIGHT': [362, 362], 'LIGHTS_REAR_ROOF_WORKLIGHT': [363, 363], 'LIGHTS_FRONT_HOOD_WORKLIGHT': [364, 364], 'FRONT_HYD_EXT_SWITCH_PAIR1': [365, 365], 'HAZARD_FLASHER_SOUND_DISABLE': [368, 368], 'AIR_FILTER_CLEANING': [369, 369], 'IGNITION_CONTROL_MODULE': [370, 370], 'PRECISION_FARM_SECTION_CTRL_24': [371, 371], 'PRECISION_FARM_SECTION_CTRL_48': [372, 372], 'PRECISION_FARM_RATE_CONTROL_2': [373, 373], 'PRECISION_FARM_RATE_CONTROL_5': [374, 374], 'INFOTAINMENT_NR_MICROPHONES': [375, 375], 'MIRROR_EXTERNAL_WIDE_ANGLE_ADJ': [376, 376], 'LIGHTS_CFG_BRAKE_AS_TURN': [377, 377], 'LIGHTS_CFG_BRAKE_AS_TURN_IF': [378, 378], 'LIGHTS_CFG_TURN_AS_BRAKE': [379, 379], 'LIGHTS_CFG_TURN_FAST_IF': [380, 380], 'LIGHTS_CFG_OVERSIZE_AS_TURN': [381, 381], 'LIGHTS_CFG_OVERSIZE_AS_HAZARD': [382, 382], 'CAMERA': [383, 383], 'CREEPER': [384, 384], 'PRECISION_FARM_SECTION_CTRL_36': [385, 385], 'HYD_ON_OFF': [386, 386], 'GEARBOX_RATIO_1': [387, 387], 'ECO_ENGINE': [388, 388], 'DIGITAL_LOADER': [389, 389], 'BRAKE_TO_NEUTRAL': [390, 390], 'FOUR_WHEEL_DRIVE_MODE_US': [391, 391], 'MOTHER_REGULATION': [392, 392], 'WITH_CABIN': [393, 393], 'POWERSHUTTLE': [394, 394], 'ENGINE_SPEED_MEMORY': [395, 395], 'AUTODRIVE_ACTIVATION': [396, 396], 'PTO_540_ECO_SPEED_LIMITATION': [397, 397], 'PRESET_ACTIVATION': [398, 398], 'ENGINE_CURVE_STRATEGY': [399, 399], 'GPA_TYPE': [400, 400], 'NB_TEETH_DRIVING_PINION': [401, 401], 'NB_TEETH_CONDUCTING_PINION': [402, 402], 'FINAL_REDUCTION': [403, 403], 'HYDRAULIC_PUMP_CAPACITY': [404, 404], 'PIN_SENSING_CAPACITY': [406, 406], 'NB_EFFORT_BAR': [407, 407], 'POT_INTERMIX_SETPOINT': [408, 408], 'DIAMETER_CYLINDER': [409, 409], 'DRAFT_CTRL_SENSORS': [410, 410], 'FOUR_WHEEL_DRIVE': [411, 411], 'DAMPING_SWITCH_ATC': [412, 412], 'POT_HIGH_POSITION_SETPOINT': [413, 413], 'POT_SINK_SPEED_SETPOINT': [414, 414], 'SWITCH_3P_HITCHING': [415, 415], 'TYPE_INTERMIX': [416, 416], 'EXT_CMD_BUTTONS': [417, 417], 'ACTIVATION_MR': [418, 418], 'PTO_SETTING': [419, 419], 'PTO_TYPE': [420, 420], 'NB_TEETH_GEAR_WHEEL': [421, 421], 'PTO_MODE': [422, 422], 'NB_TEETH_ISC': [423, 423], 'ABSENCE_ISC': [424, 424], 'FNR_BRAND': [425, 425], 'TYPE_BV': [426, 426], 'GEARBOX_SPEED_TEETH': [427, 427], 'PS_SPEED_TEETH': [428, 428], 'ENGINE_CONFIG': [429, 429], 'FOUR_WD_RATIO_DENUM': [430, 430], 'FOUR_WD_RATIO_NUM': [431, 431], 'SIGMA_POWER': [432, 432], 'FUEL_TANK': [433, 433], 'STEERABLE_HITCH': [434, 434], 'CONTROLLED_DRAWBAR': [435, 435], 'CAB_ENTRY_LADDER_TYPE': [437, 437], 'TRACTOR_GAGE': [439, 439], 'FACTORY_GAGE': [441, 441], 'PROFI_JOYSTICK': [442, 442], 'COLD_START_VALVES': [443, 443], 'SMART_CONNECT': [444, 444], 'SNAPIN_PREMIUM_DASHBOARD': [445, 445], 'SNAPIN_TRACTOR_HISTORIC_PERFOR': [446, 446], 'DEF_TANK': [447, 447], 'FUEL_TANK_SENSOR': [448, 448], 'REAR_WHEEL_SPEED_SENSOR': [449, 449], 'BEVEL_GEAR_RATIO': [450, 450], 'LIGHTS_FRONT_ROOF_WORKLIGHT_IN': [451, 451], 'LIGHTS_REAR_ROOF_WORKLIGHT_IN': [452, 452], 'ARMREST_PAHKA': [453, 453], 'TWO_PS_OPTION': [454, 454], 'GB_TAXLE': [455, 455], 'VALVE_CONNECTED_TO_FRONT_HITCH': [456, 456], 'SPEED_OFFSET_ACTIVATION': [457, 457], 'NB_ALTERNATOR': [458, 458], 'CREEPER_ENGAGE_MODE': [459, 459], 'HARDBAR_LEVELING_SW_FEATURE_B': [460, 460], 'HYD_CTRL_DETENT_SELECT': [461, 461], 'AMBIENT_AIR_TEMP_SENSOR': [462, 462], 'CLUTCH_PEDAL_MAX_SETP_OFFSET': [463, 463], 'BRAKE_TRAILER_PNEU': [464, 464], 'SEAT_ELECTRONIC_SEAT_CONTROL': [465, 465], 'POSITION_LIGHTS_A_PILLAR': [466, 466], 'TURN_SIGNAL_LIGHTS_A_PILLAR': [467, 467], 'GRAIN_TANK_COVER_TYPE': [468, 468], 'DISCHARGE_GATE_TYPE': [469, 469], 'CHOPPER_TYPE': [470, 470], 'CHAFF_SPREADER_TYPE': [471, 471], 'PARALEVEL': [472, 472], 'AUTODOCK': [473, 473], 'UNLOADER_FOLD': [474, 474], 'SETTINGS_AUTOMATION_MODE': [475, 475], 'GEAR_SHIFT_ON_FLY': [477, 477], 'ROTOR_GEAR_SELECTION': [478, 478], 'CLEANING_FAN_CONTROL': [479, 479], 'ROTOR_REVERSE_CONTROL': [480, 480], 'GRAIN_TANK_VOLUME': [481, 481], 'AUTO_RESIDUE_CONTROL': [482, 482], 'ENGINE_SUPPLIER': [483, 483], 'FEEDER_PITCH': [484, 484], 'TAILBOARD_TYPE': [485, 485], 'CONCAVE_CONFIG': [486, 486], 'THIRD_AXLE': [487, 487], 'CONCAVE_TYPE': [488, 488], 'CHAFFER_TYPE': [489, 489], 'SIEVE_TYPE': [490, 490], 'HEADER_GEAR_RATIO': [491, 491], 'CLEANING_FAN_KIT': [492, 492], 'ROTOR_SPEED_SENSING': [493, 493], 'DEFLECTOR_TYPE': [494, 494], 'CHOPPER_PLUG_SENSING': [495, 495], 'CLUTCH_LUBRICATION': [496, 496], 'STEERING_PRESSURE_SENSOR': [497, 497], 'STEER_BY_WIRE': [498, 498], 'YIELD_SENSOR': [499, 499], 'FEATURE_MGMT_DEVICE': [500, 500], 'TURN_ASSISTANT': [501, 501], 'INFOTAINMENT_NR_SPEAKERS': [502, 502], 'FINAL_REDUCTION_DENUM': [503, 503], 'FINAL_REDUCTION_NUM': [504, 504], 'BEVEL_GEAR_RATIO_NUM': [505, 505], 'LEVER_TYPE_LINEAR_LEVER_1': [506, 506], 'LEVER_TYPE_LINEAR_LEVER_2': [507, 507], 'LEVER_TYPE_LINEAR_LEVER_3': [508, 508], 'LEVER_TYPE_LINEAR_LEVER_4': [509, 509], 'LEVER_TYPE_FRONT_PTO_SWITCH': [510, 510], 'HEADS_UP_DISPLAY': [511, 511], 'THREE_PT_REAR_EXTERNAL_POS': [512, 512], 'SUSP_FRONT_AXLE_EXTERNAL': [513, 513], 'HYD_ELECTRIC_VALVE_13': [514, 514], 'CAMERA_FORWARD_VIEW': [515, 515], 'LIGHTS_REAR_WORKLIGHT': [516, 516], 'LIGHTS_TURN_IND_R': [517, 517], 'LIGHTS_TURN_IND_F': [518, 518], 'LIGHTS_LICENSE_PLATE': [519, 519], 'FRONT_AXLE_TYPE': [520, 520], 'VERTICAL_KNIFE': [521, 521], 'VARIABLE_HEADER_SPEED': [522, 522], 'PROPULSION_MOTOR': [523, 523], 'WHEEL_CIRCUMFERENCE_ADJUSTABLE': [524, 524], 'PTO_REAR_SPTO_TYPE': [525, 525], 'WHEEL_CIRCUMFERENCE': [526, 526], 'LIGHTS_TRAILER_TURN_FAULT_IND': [527, 527], 'LIGHTS_WORK': [528, 528], 'LIGHTS_TURN_OPP_ON_W_HAZARD_ON': [529, 529], 'DEF_TANK_TEMP': [530, 530], 'VD0X_MOUNTING_ORIENTATION': [531, 531], 'PROPULSION_MOTOR_DISPLACEMENT': [532, 532], 'THREE_PT_REAR_FENDER_SW_RIGHT': [533, 533], 'THREE_PT_REAR_FENDER_SW_LEFT': [534, 534], 'PTO_REAR_750': [535, 535], 'LIGHTS_SIDE_MARKER': [536, 536], 'HYD_ON_OFF_VALVE_2': [537, 537], 'STEERING_EXTERNAL_BSAC': [538, 538], 'PTO_REAR_SPEED_NON_STANDARD': [539, 539], 'FRONT_HYD_EXT_SWITCH_PAIR2': [540, 540], 'PTO_STATIONARY_MODE_REQ_NA': [541, 541], 'LOADER_READY': [542, 542], 'SNAPIN_HITCH_CONTROL': [543, 543], 'SNAPIN_WEATHER_FORECAST': [544, 544], 'TERMINAL_INFOT_CTRL': [545, 545], 'HYD_LIFT_LINK': [546, 546], 'HYD_PICKUP_HITCH': [547, 547], 'HYD_VALVE_6_2_FRONT_1': [548, 548], 'HYD_VALVE_6_2_FRONT_2': [549, 549], 'STEERING_PUMP_LOW_NOISE': [550, 550], 'BRAKE_PEDAL_SENSOR': [551, 551], 'GEARBOX_SECOND_RATIO': [552, 552], 'STEERING_VALVE_TYPE': [553, 553], 'ROAD_SPEED_TOLERANCE': [554, 554], 'BRAKE_PEDAL_COUPLING_SENSOR': [555, 555], 'ENGINE_MAINTAIN_POWER_TIME': [556, 556], 'INFOTAINMENT_SYS_MIC': [557, 557], 'HYD_VALVE_FL_3RD_FUNCTION': [558, 558], 'HYD_VALVE_FL_4TH_FUNCTION': [559, 559], 'PARKLOCK_SENSOR_HYDAC': [560, 560], 'TM_4TH_GEAR_TEETH': [561, 561], 'SPECIAL_VEHICLE_SPEED_FORWARD': [4293918707, 4293918707], 'SPECIAL_VEHICLE_SPEED_BACKWARD': [4293918708, 4293918708], 'HELP_DATA1_LANGUAGE': [4293918709, 4293918709], 'HELP_DATA2_LANGUAGE': [4293918710, 4293918710], 'HELP_DATA3_LANGUAGE': [4293918711, 4293918711], 'WHEEL_CIRCUMFERENCE_SPECIAL': [4293918712, 4293918712], 'VEHICLE_MODEL': [4293918713, 4293918713], 'VEHICLE_BRAND': [4293918714, 4293918714], 'MAXIMUM_VEHICLE_SPEED': [4293918715, 4293918715], 'MAX_WHEEL_CIRCUMFERENCE': [4293918716, 4293918716], 'VEHICLE_PLATFORM': [4293918718, 4293918718], 'VEHICLE_IDENTIFICATION_NUMBER': [4293918719, 4293918719]}, 1, 4293918719, '', False, True, False))

    MCFDataFingerprint = DiagMessage(0xF101, 'MCFDataFingerprint', [1, 3, 4, 64], None, '', 5)
    MCFDataFingerprint.add_parameter(DiagParameter('NumberOfFollowingFingerPrints', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 255, 'set to 0 if no valid fingerprints are stored, e.g at delivery status', False, False, False))
    MCFDataFingerprint.add_parameter(DiagParameter('ProgrammingYear', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 0, 2235, '', False, True, False))
    MCFDataFingerprint.add_parameter(DiagParameter('ProgrammingMonth', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 12, '', False, True, False))
    MCFDataFingerprint.add_parameter(DiagParameter('ProgrammingDay', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, 'SPN 962', False, True, False))
    MCFDataFingerprint.add_parameter(DiagParameter('ProgrammingFingerprint', 5, 4, 0, 128, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.STANDARD_LENGTH, 0, 1, 'ASCII', 0, 255, '', False, True, False))

    BootSoftwareIdentification = DiagMessage(0xF180, 'BootSoftwareIdentification', [1, 2, 3, 4, 64, 65], None, '', 1)
    BootSoftwareIdentification.add_parameter(DiagParameter('SoftwareIdentification', 1, 0, 0, 1600, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, '1 to 200 bytes allowed', False, False, False))

    ApplicationSoftwareIdentification = DiagMessage(0xF181, 'ApplicationSoftwareIdentification', [1, 2, 3, 4, 64, 65], None, '', 1)
    ApplicationSoftwareIdentification.add_parameter(DiagParameter('SoftwareIdentification', 1, 0, 0, 1600, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, '1 to 200 bytes allowed', False, False, False))

    ApplicationDataIdentification = DiagMessage(0xF182, 'ApplicationDataIdentification', [1, 2, 3, 4, 64, 65], None, '', 1)
    ApplicationDataIdentification.add_parameter(DiagParameter('SoftwareIdentification', 1, 0, 0, 1600, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, '1 to 200 bytes allowed', False, False, False))

    BootSoftwareFingerprint = DiagMessage(0xF183, 'BootSoftwareFingerprint', [1, 2, 3, 4, 64], None, '', 5)
    BootSoftwareFingerprint.add_parameter(DiagParameter('NumberOfFollowingFingerPrints', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 255, 'set to 0 if no valid fingerprints are stored, e.g at delivery status', False, False, False))
    BootSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingYear', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 0, 2235, 'SPN 964', False, True, False))
    BootSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingMonth', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, '', False, True, False))
    BootSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingDay', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, '', False, True, False))
    BootSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingFingerprint', 5, 4, 0, 128, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.STANDARD_LENGTH, 0, 1, 'ASCII', 0, 255, '', False, True, False))

    ApplicationSoftwareFingerprint = DiagMessage(0xF184, 'ApplicationSoftwareFingerprint', [1, 2, 3, 4, 64], None, '', 5)
    ApplicationSoftwareFingerprint.add_parameter(DiagParameter('NumberOfFollowingFingerPrints', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 255, 'set to 0 if no valid fingerprints are stored, e.g at delivery status', False, False, False))
    ApplicationSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingYear', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 0, 2235, 'SPN 964', False, True, False))
    ApplicationSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingMonth', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, '', False, True, False))
    ApplicationSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingDay', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, '', False, True, False))
    ApplicationSoftwareFingerprint.add_parameter(DiagParameter('ProgrammingFingerprint', 5, 4, 0, 128, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.STANDARD_LENGTH, 0, 1, 'ASCII', 0, 255, '', False, True, False))

    ApplicationDataFingerprint = DiagMessage(0xF185, 'ApplicationDataFingerprint', [1, 2, 3, 4, 64], None, '', 5)
    ApplicationDataFingerprint.add_parameter(DiagParameter('NumberOfFollowingFingerPrints', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 255, 'set to 0 if no valid fingerprints are stored, e.g at delivery status', False, False, False))
    ApplicationDataFingerprint.add_parameter(DiagParameter('ProgrammingYear', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 0, 2235, 'SPN 964', False, True, False))
    ApplicationDataFingerprint.add_parameter(DiagParameter('ProgrammingMonth', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, '', False, True, False))
    ApplicationDataFingerprint.add_parameter(DiagParameter('ProgrammingDay', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, '', False, True, False))
    ApplicationDataFingerprint.add_parameter(DiagParameter('ProgrammingFingerprint', 5, 4, 0, 128, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.STANDARD_LENGTH, 0, 1, 'ASCII', 0, 255, '', False, True, False))

    ActiveDiagnosticSession = DiagMessage(0xF186, 'ActiveDiagnosticSession', [1, 2, 3, 4, 64, 65], None, '', 1)
    ActiveDiagnosticSession.add_parameter(DiagParameter('SessionNumber', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 1, 65, '', False, False, False))

    VehicleManufacturerSparePartNumber = DiagMessage(0xF187, 'VehicleManufacturerSparePartNumber', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehicleManufacturerSparePartNumber.add_parameter(DiagParameter('PartNumber', 1, 0, 0, 160, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, 'Partnumber of the electronic board (mandatory, all 0xFF --> "INVALID")', False, False, False))

    EcuSerialNumber = DiagMessage(0xF18C, 'EcuSerialNumber', [1, 2, 3, 4, 64], None, '', 1)
    EcuSerialNumber.add_parameter(DiagParameter('SerialNumber', 1, 0, 0, 256, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, '1 to 32 bytes allowed (all 0xFF --> "INVALID")', False, False, False))

    VehicleManufacturerKitAssemblyPartNumber = DiagMessage(0xF18E, 'VehicleManufacturerKitAssemblyPartNumber', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehicleManufacturerKitAssemblyPartNumber.add_parameter(DiagParameter('AssemblyPartNumber', 1, 0, 0, 160, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, 'Partnumber of a complete Assembly e.g. G-Nr (all 0xFF --> "INVALID")', False, False, False))

    VehicleIdentificationNumber = DiagMessage(0xF190, 'VehicleIdentificationNumber', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehicleIdentificationNumber.add_parameter(DiagParameter('VinNumber', 1, 0, 0, 136, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, 'ASCII', 0, 255, '17 bytes fixed length (all 0xFF --> "INVALID")', False, False, False))

    VehicleManufacturerECUHardwareNumber = DiagMessage(0xF191, 'VehicleManufacturerECUHardwareNumber', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehicleManufacturerECUHardwareNumber.add_parameter(DiagParameter('VirtualPartNumber', 1, 0, 0, 32, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, '', 4293918720, 4294967295, 'Unique feature identifier (mandatory for compatibility check hardware/software at ECU programming) ', False, False, False))

    VehicleModel = DiagMessage(0xF1A7, 'VehicleModel', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehicleModel.add_parameter(DiagParameter('VehicleModel', 1, 0, 0, 80, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.MIN_MAX_LENGTH, 0, 1, '', 0, 255, 'e.g. "T760"', False, False, False))

    VehiclePlatform = DiagMessage(0xF1A9, 'VehiclePlatform', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehiclePlatform.add_parameter(DiagParameter('VehiclePlatform', 1, 0, 0, 40, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.STANDARD_LENGTH, 0, 1, '', 0, 255, 'e.g. "M219P"', False, False, False))

    VehicleBrand = DiagMessage(0xF1AA, 'VehicleBrand', [1, 2, 3, 4, 64, 65], None, '', 1)
    VehicleBrand.add_parameter(DiagParameter('VehicleBrand', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.LOOKUPTABLE, SignalConversion.IDENTICAL, 0, 1, {'-': [48, 48], 'A': [65, 65], 'C': [67, 67], 'F': [70, 70], 'L': [76, 76], 'M': [77, 77], 'V': [86, 86], 'Y': [89, 89]}, 48, 89, '1 Ascii Char: "F" = Fendt, "M" = Massey, "V" = Valtra, etc', False, False, False))


class DGW_BVWriteDataSignals:
    TimeDate = DiagMessage(0x0101, 'TimeDate', [3, 4, 64], [1, 3, 4], '', 8)
    TimeDate.add_parameter(DiagParameter('Seconds', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 's', 0, 59.75, 'The seconds component of the current time of day', False, False, False))
    TimeDate.add_parameter(DiagParameter('Minutes', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'min', 0, 59, 'The minutes component of the current time of day', False, False, False))
    TimeDate.add_parameter(DiagParameter('Hours', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'h', 0, 23, 'The hour component of the current time of day', False, False, False))
    TimeDate.add_parameter(DiagParameter('Month', 4, 3, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, 'The month component of the current calendar date', False, False, False))
    TimeDate.add_parameter(DiagParameter('Day', 5, 4, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, 'The day component of the current calendar date', False, False, False))
    TimeDate.add_parameter(DiagParameter('Year', 6, 5, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 1985, 2235, 'The year component of the current calendar date', False, False, False))
    TimeDate.add_parameter(DiagParameter('LocalMinuteOffset', 7, 6, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, -125.0, 1.0, 'min', -59, 59, 'The minute component of the offset between the UTC time and date and a local time zone time and date', False, False, False))
    TimeDate.add_parameter(DiagParameter('LocalHourOffset', 8, 7, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, -125.0, 1.0, 'min', -12, 14, 'The hour component of the offset between the UTC time and date and a local time zone time and date', False, False, False))

    EnvTotalVehicleHours = DiagMessage(0x0114, 'EnvTotalVehicleHours', [3, 4, 64], [3, 4], '', 1)
    EnvTotalVehicleHours.add_parameter(DiagParameter('TotalVehicleHours', 1, 0, 0, 32, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.05, 'h', 0, 210554060.75, '', False, False, False))

    NextServiceInterval = DiagMessage(0xCF00, 'NextServiceInterval', [3, 4, 64], [1, 3, 4], '', 4)
    NextServiceInterval.add_parameter(DiagParameter('AbsoluteVehicleHours', 1, 0, 0, 32, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.05, 'h', 0, 210554060.75, '', False, False, False))
    NextServiceInterval.add_parameter(DiagParameter('Day', 2, 4, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, '', False, False, False))
    NextServiceInterval.add_parameter(DiagParameter('Month', 3, 5, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, '', False, False, False))
    NextServiceInterval.add_parameter(DiagParameter('Year', 4, 6, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 1985, 2235, '', False, False, False))

    WriteFingerprint = DiagMessage(0xF15A, 'WriteFingerprint', [2, 4, 64], [1, 3, 4, 5], '', 4)
    WriteFingerprint.add_parameter(DiagParameter('ProgrammingYear', 1, 0, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 1985.0, 1.0, 'years', 0, 2235, '', False, False, False))
    WriteFingerprint.add_parameter(DiagParameter('ProgrammingMonth', 2, 1, 0, 8, SignalByteOrder.Motorola, SignalType.UINT, SignalConversion.IDENTICAL, 0, 1, 'months', 1, 12, '', False, False, False))
    WriteFingerprint.add_parameter(DiagParameter('ProgrammingDay', 3, 2, 0, 8, SignalByteOrder.Motorola, SignalType.UINT_LINEAR, SignalConversion.LINEAR_CALCULATION, 0.0, 0.25, 'days', 0.25, 31.75, '', False, False, False))
    WriteFingerprint.add_parameter(DiagParameter('ProgrammingFingerprint', 4, 3, 0, 128, SignalByteOrder.Motorola, SignalType.ASCIISTRING, SignalConversion.STANDARD_LENGTH, 0, 1, 'ASCII', 0, 255, '', False, False, False))


class DGW_BVIOControlDataSignals:
    pass


DGW_BVDTCSnapshotdDids = {
0x0112: DGW_BVReadDataSignals.EnvTime,
0x0113: DGW_BVReadDataSignals.EnvDate,
0x0114: DGW_BVReadDataSignals.EnvTotalVehicleHours,
0x0115: DGW_BVReadDataSignals.EnvOccurrenceCount,
0x011A: DGW_BVReadDataSignals.EnvBatteryPotential,
0x011B: DGW_BVReadDataSignals.EnvAmbientAirTemperature,
0x011C: DGW_BVReadDataSignals.EnvEngineSpeed,
0x011D: DGW_BVReadDataSignals.EnvMachineSelectedSpeedAndDirection,
0x011E: DGW_BVReadDataSignals.EnvEnginePercentLoadAtCurrentSpeed,
0x1101: DGW_BVReadDataSignals.InternalErrorModule,
0x1102: DGW_BVReadDataSignals.InternalErrorCode,
}


class DGWClient(ECUClient):
    class FlashData(Enum):
        BOOT = [MemoryLocation(0x1100000, 0x0, 32, 32, erase_address=0x1100000, erase_size=None, path_to_file="^DGW_[.]______[.]U[.][0-9a-fA-F]{2}[.][0-9a-fA-F]{3}[.][0-9a-fA-F]{2}[.].{6}[.](HEX|hex)$", ecu_reset=True, wait_time_ecu_reset=0, area_name="BOOT", did_read_obj=deepcopy(DGW_BVReadDataSignals.BootSoftwareIdentification), did_fingerprint_obj=deepcopy(DGW_BVReadDataSignals.BootSoftwareFingerprint), did_dependency=None, consider_in_mdr=False)]
        APPL = [MemoryLocation(0x1100000, 0x0, 32, 32, erase_address=0x1100000, erase_size=None, path_to_file="^DGW_[.]__MOD_[.]F[.][0-9a-fA-F]{2}[.][0-9a-fA-F]{3}[.][0-9a-fA-F]{2}[.].{6}[.](HEX|hex)$", ecu_reset=True, wait_time_ecu_reset=0, area_name="APPL", did_read_obj=deepcopy(DGW_BVReadDataSignals.ApplicationSoftwareIdentification), did_fingerprint_obj=deepcopy(DGW_BVReadDataSignals.ApplicationSoftwareFingerprint), did_dependency=None, consider_in_mdr=False)]
        DATA = [MemoryLocation(0x1300000, 0x0, 32, 32, erase_address=0x1300000, erase_size=None, path_to_file="DGW_.______.D.01.005.07.BVS___.hex", ecu_reset=True, wait_time_ecu_reset=0, area_name="DATA", did_read_obj=deepcopy(DGW_BVReadDataSignals.ApplicationDataIdentification), did_fingerprint_obj=deepcopy(DGW_BVReadDataSignals.ApplicationDataFingerprint), did_dependency=None, consider_in_mdr=False)]
        MCF = [MemoryLocation(0x13C0400, 0x0, 32, 32, erase_address=0x13C0400, erase_size=None, path_to_file="skip", ecu_reset=True, wait_time_ecu_reset=0, area_name="MCF", did_read_obj=None, did_fingerprint_obj=deepcopy(DGW_BVReadDataSignals.MCFDataFingerprint), did_dependency=None, consider_in_mdr=False), MemoryLocation(0x13C1400, 0x0, 32, 32, erase_address=0x13C1400, erase_size=None, path_to_file="skip", ecu_reset=True, wait_time_ecu_reset=0, area_name="MCF", did_read_obj=None, did_fingerprint_obj=deepcopy(DGW_BVReadDataSignals.MCFDataFingerprint), did_dependency=None, consider_in_mdr=False), MemoryLocation(0x13C2400, 0x0, 32, 32, erase_address=0x13C2400, erase_size=None, path_to_file="skip", ecu_reset=True, wait_time_ecu_reset=0, area_name="MCF", did_read_obj=None, did_fingerprint_obj=deepcopy(DGW_BVReadDataSignals.MCFDataFingerprint), did_dependency=None, consider_in_mdr=False)]

    class ReadDIDs(Enum):
        ACTIVE_SESSION = deepcopy(DGW_BVReadDataSignals.ActiveDiagnosticSession)
        VIN = deepcopy(DGW_BVReadDataSignals.VehicleIdentificationNumber)
        VEHICLE_BRAND = deepcopy(DGW_BVReadDataSignals.VehicleBrand)
        VEHICLE_PLATFORM = deepcopy(DGW_BVReadDataSignals.VehiclePlatform)
        VEHICLE_MODEL = deepcopy(DGW_BVReadDataSignals.VehicleModel)
        HARDWARE_ID = deepcopy(DGW_BVReadDataSignals.VehicleManufacturerECUHardwareNumber)
        SERIAL_NR = deepcopy(DGW_BVReadDataSignals.EcuSerialNumber)
        VEH_SPARE_PART = deepcopy(DGW_BVReadDataSignals.VehicleManufacturerSparePartNumber)
        KIT_ASSEMBLY_NR = deepcopy(DGW_BVReadDataSignals.VehicleManufacturerKitAssemblyPartNumber)

    def __init__(self, routing_over_dgw=False, can_channel=1, comparam=UDSConnection.default_com_parameter,
                 functional_addressing=None, **kwargs):
        hw_id = 0xFFF00017
        super().__init__(0x2B, "DGW", False, [], hw_id, can_channel=can_channel,
                         routing_over_dgw=routing_over_dgw, comparam=comparam, baudrate=500000,
                         sec_vendor=b'Vendor=AGCO,', source_id=0xF9, j1939_prio=6, switch_session_wait_time=0.0,
                         boot_time_min=40, key_length=4, functional_adr=functional_addressing,
                         **kwargs)
        self.kl15_relay = 0
        self.kl30_relay = 0
        self.read_dids = DGW_BVReadDataSignals
        self.write_dids = DGW_BVWriteDataSignals
        self.routine_dids = DGW_BVRoutineIdentifierSignals
        self.io_dids = DGW_BVIOControlDataSignals
        self.dtc_snapshot_dids = DGW_BVDTCSnapshotdDids
        self.long_name = "Diagnostic Gateway"
        self.sysmon_sw_version_min_number_of_matches = 0
        self.sysmon_mask_active = False

